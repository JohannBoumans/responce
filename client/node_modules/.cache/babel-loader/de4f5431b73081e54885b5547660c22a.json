{"ast":null,"code":"import _defineProperty from \"/Users/johannboumans/Data/DevConnector/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/johannboumans/Data/DevConnector/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/johannboumans/Data/DevConnector/client/src/components/profile-forms/AddExperience.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience } from \"../../actions/profile\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nconst AddExperience = ({\n  addExperience,\n  history\n}) => {\n  const _useState = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        toDateDisabled = _useState4[0],\n        toggleDisabled = _useState4[1];\n\n  const company = formData.company,\n        title = formData.title,\n        location = formData.location,\n        from = formData.from,\n        to = formData.to,\n        current = formData.current,\n        description = formData.description;\n\n  const onChange = e => {\n    setFormData(_objectSpread({}, formData, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    addExperience(formData, history);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Add An Experience\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-code-branch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), \" Add any developer/programming positions that you have had in the past\"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"* = required field\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"* Job Title\",\n    name: \"title\",\n    value: title,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"* Company\",\n    name: \"company\",\n    value: company,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Location\",\n    name: \"location\",\n    value: location,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"From Date\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"from\",\n    value: from,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"current\",\n    checked: current,\n    value: current,\n    onChange: () => {\n      setFormData(_objectSpread({}, formData, {\n        current: !current\n      }));\n      toggleDisabled(!toDateDisabled);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), '  ', \" Current Job\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"To Date\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"to\",\n    value: to,\n    onChange: e => onChange(e),\n    disabled: toDateDisabled ? 'disabled' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    name: \"description\",\n    cols: \"30\",\n    rows: \"5\",\n    placeholder: \"Job Description\",\n    value: description,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    className: \"btn btn-light my-1\",\n    href: \"dashboard.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Go Back\")));\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addExperience\n})(withRouter(AddExperience));","map":{"version":3,"sources":["/Users/johannboumans/Data/DevConnector/client/src/components/profile-forms/AddExperience.jsx"],"names":["React","Fragment","useState","PropTypes","connect","addExperience","Link","withRouter","AddExperience","history","company","title","location","from","to","current","description","formData","setFormData","toDateDisabled","toggleDisabled","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addExperience} from \"../../actions/profile\";\nimport { Link, withRouter} from \"react-router-dom\";\n\nconst AddExperience = ({ addExperience, history }) => {\n\n  const [formData, setFormData] = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const {company, title, location, from, to, current, description} = formData;\n\n  const onChange = e => {\n    setFormData({...formData, [e.target.name]: e.target.value })\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    addExperience(formData, history)\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n        Add An Experience\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Job Title\"\n            name=\"title\"\n            value={title}\n            onChange={e => onChange(e)}\n            required/>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Company\"\n            name=\"company\"\n            value={company}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\" value={location}\n            onChange={e => onChange(e)}/>\n        </div>\n        <div className=\"form-group\">\n          <h4>From Date</h4>\n          <input\n            type=\"date\"\n            name=\"from\"\n            value={from}\n            onChange={e => onChange(e)}/>\n        </div>\n        <div className=\"form-group\">\n          <p>\n            <input\n              type=\"checkbox\"\n              name=\"current\"\n              checked={current}\n              value={current}\n              onChange={() => {\n            setFormData({...formData, current: !current});\n            toggleDisabled(!toDateDisabled)\n          }}\n            />\n          {'  '} Current Job\n          </p>\n        </div>\n        <div className=\"form-group\">\n          <h4>To Date</h4>\n          <input\n            type=\"date\"\n            name=\"to\"\n            value={to}\n            onChange={e => onChange(e)}\n            disabled={toDateDisabled ? 'disabled' : '' }\n          />\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Job Description\"\n            value={description}\n            onChange={e => onChange(e)}\n          ></textarea>\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary my-1\"/>\n        <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\n      </form>\n    </Fragment>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addExperience })(withRouter(AddExperience));\n"]},"metadata":{},"sourceType":"module"}