{"ast":null,"code":"var _jsxFileName = \"/Users/johannboumans/Data/DevConnector/client/src/components/profile/Profile.jsx\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport { Link } from \"react-router-dom\";\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]); //tester de recuperer user dans profile ou bio dans profile props\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Back To Profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Edit Profile\"), React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(ProfileTop, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(ProfileAbout, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Experience\")))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/johannboumans/Data/DevConnector/client/src/components/profile/Profile.jsx"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Link","ProfileTop","ProfileAbout","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAACJ,EAAAA,cAAD;AAAiBK,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAA1B;AAAgDC,EAAAA,IAAhD;AAAsDC,EAAAA;AAAtD,CAAD,KAAkE;AAGhFZ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEN,CAACV,cAAD,EAAiBQ,KAAK,CAACC,MAAN,CAAaC,EAA9B,CAFM,CAAT,CAHgF,CAOhF;;AAEA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,KAAK,IAAZ,IAAoBC,OAApB,GACD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,GAGD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAIGC,IAAI,CAACI,eAAL,IAAwBJ,IAAI,CAACD,OAAL,KAAiB,KAAzC,IAAkDC,IAAI,CAACK,IAAL,CAAUC,GAAV,KAAkBR,OAAO,CAACO,IAAR,CAAaC,GAAjF,IACA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALH,EAQE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAER,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEA,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAHF,CARF,CAJF,CADF;AAwBD,CAjCD;;AAmCAD,OAAO,CAACU,SAAR,GAAoB;AAClBd,EAAAA,cAAc,EAAEH,SAAS,CAACkB,IAAV,CAAeC,UADb;AAElBX,EAAAA,OAAO,EAAER,SAAS,CAACoB,MAAV,CAAiBD,UAFR;AAGlBT,EAAAA,IAAI,EAAEV,SAAS,CAACoB,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,OAAO,EAAEc,KAAK,CAACd,OADiB;AAEhCE,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AAFoB,CAAL,CAA7B;;AAMA,eAAeT,OAAO,CAACoB,eAAD,EAAkB;AAAClB,EAAAA;AAAD,CAAlB,CAAP,CAA2CI,OAA3C,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport Spinner from \"../layout/Spinner\";\nimport {getProfileById} from \"../../actions/profile\";\nimport {Link} from \"react-router-dom\";\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\n\n\nconst Profile = ({getProfileById, profile: { profile, loading }, auth, match}) => {\n\n\n  useEffect(() => {\n    getProfileById(match.params.id)\n  }, [getProfileById, match.params.id]);\n\n  //tester de recuperer user dans profile ou bio dans profile props\n\n  return (\n    <Fragment>\n      {profile === null || loading ?\n      <Spinner/>\n        :\n      <Fragment>\n        <Link to=\"/profiles\" className=\"btn btn-light\">\n          Back To Profiles\n        </Link>\n        {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id &&\n        (<Link to=\"/edit-profile\" className=\"btn btn-dark\">\n          Edit Profile\n        </Link>)}\n        <div className=\"profile-grid my-1\">\n          <ProfileTop profile={profile}/>\n          <ProfileAbout profile={profile} />\n          <div className=\"profile-exp bg-white p-2\">\n            <h2 className=\"text-primary\">Experience</h2>\n            \n          </div>\n        </div>\n      </Fragment>}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\n\nexport default connect(mapStateToProps, {getProfileById})(Profile);\n"]},"metadata":{},"sourceType":"module"}