{"ast":null,"code":"var _jsxFileName = \"/Users/johannboumans/Data/DevConnector/client/src/components/profile/Profile.jsx\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport { Link } from \"react-router-dom\";\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport ProfileGithub from './ProfileGithub';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]); //tester de recuperer user dans profile ou bio dans profile props\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Back To Profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Edit Profile\"), React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(ProfileTop, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(ProfileAbout, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Experience\"), profile.experience.length > 0 ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, profile.experience.map(exp => React.createElement(ProfileExperience, {\n    key: exp._id,\n    experience: exp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"No experience credentials\")), React.createElement(\"div\", {\n    className: \"profile-edu bg-white p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Education\"), profile.education.length > 0 ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, profile.education.map(edu => React.createElement(ProfileEducation, {\n    key: edu._id,\n    education: edu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"No education credentials\")), profile.githubusername && React.createElement(ProfileGithub, {\n    username: profile.githubusername,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/johannboumans/Data/DevConnector/client/src/components/profile/Profile.jsx"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Link","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","exp","education","edu","githubusername","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport Spinner from \"../layout/Spinner\";\nimport {getProfileById} from \"../../actions/profile\";\nimport {Link} from \"react-router-dom\";\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport ProfileGithub from './ProfileGithub';\n\nconst Profile = ({getProfileById, profile: { profile, loading }, auth, match}) => {\n\n\n  useEffect(() => {\n    getProfileById(match.params.id)\n  }, [getProfileById, match.params.id]);\n\n  //tester de recuperer user dans profile ou bio dans profile props\n\n  return (\n    <Fragment>\n      {profile === null || loading ?\n      <Spinner/>\n        :\n      <Fragment>\n        <Link to=\"/profiles\" className=\"btn btn-light\">\n          Back To Profiles\n        </Link>\n        {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id &&\n        (<Link to=\"/edit-profile\" className=\"btn btn-dark\">\n          Edit Profile\n        </Link>)}\n        <div className=\"profile-grid my-1\">\n          <ProfileTop profile={profile}/>\n          <ProfileAbout profile={profile} />\n\n          <div className=\"profile-exp bg-white p-2\">\n            <h2 className=\"text-primary\">Experience</h2>\n\n            {profile.experience.length > 0 ? (<Fragment>\n              {profile.experience.map(exp => (\n                <ProfileExperience\n                  key={exp._id}\n                  experience={exp}\n                />\n              ))}\n            </Fragment>) : (<h4>No experience credentials</h4>)}\n\n          </div>\n          <div className=\"profile-edu bg-white p-2\">\n            <h2 className=\"text-primary\">Education</h2>\n\n            {profile.education.length > 0 ? (<Fragment>\n              {profile.education.map(edu => (\n                <ProfileEducation\n                  key={edu._id}\n                  education={edu}\n                />\n              ))}\n            </Fragment>) : (<h4>No education credentials</h4>)}\n\n          </div>\n\n          {profile.githubusername && (\n            <ProfileGithub username={profile.githubusername} />\n          )}\n        </div>\n      </Fragment>}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\n\nexport default connect(mapStateToProps, {getProfileById})(Profile);\n"]},"metadata":{},"sourceType":"module"}