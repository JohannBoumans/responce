{"ast":null,"code":"var _jsxFileName = \"/Users/johannboumans/Data/DevConnector/client/src/components/posts/Post.jsx\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getPost } from \"../../actions/post\";\nimport PostItem from \"./PostItem\";\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["/Users/johannboumans/Data/DevConnector/client/src/components/posts/Post.jsx"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getPost","PostItem","Post","post","loading","match","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACF,EAAAA,OAAD;AAAUG,EAAAA,IAAI,EAAE;AAACA,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAhB;AAAiCC,EAAAA;AAAjC,CAAD,KAA6C;AAExDT,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACD,GAFQ,EAEN,CAACP,OAAD,CAFM,CAAT;AAIA,SACEI,OAAO,IAAID,IAAI,KAAK,IAApB,GACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAGE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJJ;AAQD,CAdD;;AAgBAD,IAAI,CAACM,SAAL,GAAiB;AACfR,EAAAA,OAAO,EAAEH,SAAS,CAACY,IAAV,CAAeC,UADT;AAEfP,EAAAA,IAAI,EAAEN,SAAS,CAACc,MAAV,CAAiBD;AAFR,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADoB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACc,eAAD,EAAkB;AAACZ,EAAAA;AAAD,CAAlB,CAAP,CAAoCE,IAApC,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport {getPost} from \"../../actions/post\";\nimport PostItem from \"./PostItem\";\n\nconst Post = ({getPost, post: {post, loading}, match}) => {\n\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n\n  return (\n    loading || post === null ?\n      <Spinner/>\n      :\n      <Fragment>\n        <PostItem post={post} showActions={false} />\n      </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {getPost})(Post);\n"]},"metadata":{},"sourceType":"module"}