{"ast":null,"code":"var _jsxFileName = \"/Users/johannboumans/Data/DevConnector/client/src/components/post/Post.jsx\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getPost } from \"../../actions/post\";\nimport PostItem from \"../posts/PostItem\";\nimport { Link } from \"react-router-dom\";\nimport CommentForm from \"./CommentForm\";\nimport CommentItem from \"./CommentItem\";\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost, match.params.id]);\n  return loading || post === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Back To Posts\"), React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, post.comments.map(comment => {\n    React.createElement(CommentItem, {\n      key: comment._id,\n      comment: comment,\n      postId: post._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  })));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["/Users/johannboumans/Data/DevConnector/client/src/components/post/Post.jsx"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getPost","PostItem","Link","CommentForm","CommentItem","Post","post","loading","match","params","id","_id","comments","map","comment","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACL,EAAAA,OAAD;AAAUM,EAAAA,IAAI,EAAE;AAACA,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAhB;AAAiCC,EAAAA;AAAjC,CAAD,KAA6C;AAExDZ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAACQ,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACD,GAFQ,EAEN,CAACV,OAAD,EAAUQ,KAAK,CAACC,MAAN,CAAaC,EAAvB,CAFM,CAAT;AAIA,SACEH,OAAO,IAAID,IAAI,KAAK,IAApB,GACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAGE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,IAAI,CAACK,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAkBC,OAAO,IAAI;AAC5B,wBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,OAAO,CAACH,GAA1B;AAA+B,MAAA,OAAO,EAAEG,OAAxC;AAAiD,MAAA,MAAM,EAAER,IAAI,CAACK,GAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GAFA,CADH,CAJF,CAJJ;AAeD,CArBD;;AAuBAN,IAAI,CAACU,SAAL,GAAiB;AACff,EAAAA,OAAO,EAAEH,SAAS,CAACmB,IAAV,CAAeC,UADT;AAEfX,EAAAA,IAAI,EAAET,SAAS,CAACqB,MAAV,CAAiBD;AAFR,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADoB,CAAL,CAA7B;;AAIA,eAAeR,OAAO,CAACqB,eAAD,EAAkB;AAACnB,EAAAA;AAAD,CAAlB,CAAP,CAAoCK,IAApC,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport {getPost} from \"../../actions/post\";\nimport PostItem from \"../posts/PostItem\";\nimport {Link} from \"react-router-dom\";\nimport CommentForm from \"./CommentForm\";\nimport CommentItem from \"./CommentItem\";\n\n\nconst Post = ({getPost, post: {post, loading}, match}) => {\n\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost, match.params.id]);\n\n  return (\n    loading || post === null ?\n      <Spinner/>\n      :\n      <Fragment>\n        <Link to='/posts' className='btn'>Back To Posts</Link>\n        <PostItem post={post} showActions={false} />\n        <CommentForm postId={post._id} />\n        <div className=\"comments\">\n          {post.comments.map(comment => {\n            <CommentItem key={comment._id} comment={comment} postId={post._id} />\n          })}\n        </div>\n      </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {getPost})(Post);\n"]},"metadata":{},"sourceType":"module"}