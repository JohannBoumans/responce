{"ast":null,"code":"var _jsxFileName = \"/Users/johannboumans/Data/DevConnector/client/src/components/posts/PostItem.jsx\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\n\nconst PostItem = ({\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  addLike,\n  removeLike,\n  deletePost\n}) => React.createElement(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/profile/\".concat(user),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  className: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}), React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, name))), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  className: \"my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, text), React.createElement(\"p\", {\n  className: \"post-date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"Posted on \", React.createElement(Moment, {\n  format: \"DD/MM/YYYY\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, date)), React.createElement(\"button\", {\n  type: \"button\",\n  className: \"btn btn-light\",\n  onClick: () => addLike(_id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-thumbs-up\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), '  ', likes.length > 0 && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, likes.length)), React.createElement(\"button\", {\n  type: \"button\",\n  className: \"btn btn-light\",\n  onClick: () => removeLike(_id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-thumbs-down\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n})), React.createElement(Link, {\n  to: \"/posts/\".concat(_id),\n  className: \"btn btn-primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, \"Discussion \", comments.length > 0 && React.createElement(\"span\", {\n  className: \"comment-count\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, comments.length)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n  type: \"button\",\n  className: \"btn btn-danger\",\n  onClick: () => deletePost(_id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-times\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}))));\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["/Users/johannboumans/Data/DevConnector/client/src/components/posts/PostItem.jsx"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","length","loading","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport {connect} from \"react-redux\";\nimport {addLike, removeLike, deletePost} from \"../../actions/post\";\n\nconst PostItem = ({auth, post: { _id, text, name, avatar, user, likes, comments, date }, addLike, removeLike, deletePost}) => (\n\n    <div className=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img\n            className=\"round-img\"\n            src={avatar}\n            alt=\"\"\n          />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className=\"my-1\">\n          {text}\n        </p>\n        <p className=\"post-date\">\n          Posted on <Moment format='DD/MM/YYYY'>{date}</Moment>\n        </p>\n        <button type=\"button\" className=\"btn btn-light\" onClick={() => addLike(_id)}>\n          <i className=\"fas fa-thumbs-up\"></i>\n          {'  '}\n          {likes.length > 0 && (\n            <span>{likes.length}</span>\n          )}\n        </button>\n        <button type=\"button\" className=\"btn btn-light\" onClick={() => removeLike(_id)} >\n          <i className=\"fas fa-thumbs-down\"></i>\n        </button>\n        <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n          Discussion {comments.length > 0 && (\n          <span className='comment-count'>{comments.length}</span>\n        )}\n        </Link>\n\n        {!auth.loading && user === auth.user._id && (\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={() => deletePost(_id)}\n          >\n            <i className=\"fas fa-times\"></i>\n          </button>\n        )}\n      </div>\n    </div>\n);\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {addLike, removeLike, deletePost})(PostItem);\n"]},"metadata":{},"sourceType":"module"}