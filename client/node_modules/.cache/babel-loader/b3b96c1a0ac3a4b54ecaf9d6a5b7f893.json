{"ast":null,"code":"var _jsxFileName = \"/Users/johannboumans/Data/DevConnector/client/src/components/profile/Profile.jsx\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport { Link } from \"react-router-dom\";\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  console.log(match);\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Back To Profiles\")));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/johannboumans/Data/DevConnector/client/src/components/profile/Profile.jsx"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Link","Profile","profile","loading","auth","match","console","log","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAACF,EAAAA,cAAD;AAAiBG,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAA1B;AAAgDC,EAAAA,IAAhD;AAAsDC,EAAAA;AAAtD,CAAD,KAAkE;AAChFC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc,CAACM,KAAK,CAACG,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEN,CAACV,cAAD,CAFM,CAAT;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,OAAO,KAAK,IAAZ,IAAoBC,OAApB,GACD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,GAGD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAJF,CADF;AAYD,CAnBD;;AAqBAF,OAAO,CAACS,SAAR,GAAoB;AAClBX,EAAAA,cAAc,EAAEH,SAAS,CAACe,IAAV,CAAeC,UADb;AAElBV,EAAAA,OAAO,EAAEN,SAAS,CAACiB,MAAV,CAAiBD,UAFR;AAGlBR,EAAAA,IAAI,EAAER,SAAS,CAACiB,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,OAAO,EAAEa,KAAK,CAACb,OADiB;AAEhCE,EAAAA,IAAI,EAAEW,KAAK,CAACX;AAFoB,CAAL,CAA7B;;AAKA,eAAeP,OAAO,CAACiB,eAAD,EAAkB;AAACf,EAAAA;AAAD,CAAlB,CAAP,CAA2CE,OAA3C,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport Spinner from \"../layout/Spinner\";\nimport {getProfileById} from \"../../actions/profile\";\nimport {Link} from \"react-router-dom\";\n\n\nconst Profile = ({getProfileById, profile: { profile, loading }, auth, match}) => {\n  console.log(match);\n\n  useEffect(() => {\n    getProfileById(match.params.id)\n  }, [getProfileById]);\n\n  return (\n    <Fragment>\n      {profile === null || loading ?\n      <Spinner/>\n        :\n      <Fragment>\n        <Link to=\"/profiles\" className=\"btn btn-light\">\n          Back To Profiles\n        </Link>\n      </Fragment>}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {getProfileById})(Profile);\n"]},"metadata":{},"sourceType":"module"}