{"ast":null,"code":"var _jsxFileName = \"/Users/johannboumans/Data/Responce/client/src/components/posts/Posts.jsx\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { getPosts } from \"../../actions/post\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from './PostItem';\nimport PostForm from \"./PostForm\";\n\nconst Posts = ({\n  getPosts,\n  post: {\n    posts,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Posts\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), \"Welcome to the community\"), React.createElement(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, posts.map(post => React.createElement(PostItem, {\n    key: post._id,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))));\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);","map":{"version":3,"sources":["/Users/johannboumans/Data/Responce/client/src/components/posts/Posts.jsx"],"names":["React","useEffect","Fragment","PropTypes","connect","getPosts","Spinner","PostItem","PostForm","Posts","post","posts","loading","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACJ,EAAAA,QAAD;AAAWK,EAAAA,IAAI,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAjB,CAAD,KAAyC;AAErDX,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,SACEO,OAAO,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,6BAFF,EAME,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAUH,IAAI,IACb,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACI,GAApB;AAAyB,IAAA,IAAI,EAAEJ,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAPF,CAFJ;AAiBD,CAvBD;;AAyBAD,KAAK,CAACM,SAAN,GAAkB;AAChBV,EAAAA,QAAQ,EAAEF,SAAS,CAACa,IAAV,CAAeC,UADT;AAEhBP,EAAAA,IAAI,EAAEP,SAAS,CAACe,MAAV,CAAiBD;AAFP,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADoB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACe,eAAD,EAAkB;AAACd,EAAAA;AAAD,CAAlB,CAAP,CAAqCI,KAArC,CAAf","sourcesContent":["import React, {useEffect, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {getPosts} from \"../../actions/post\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from './PostItem';\nimport PostForm from \"./PostForm\";\n\nconst Posts = ({getPosts, post: {posts, loading} }) => {\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    loading ? <Spinner/> : (\n      <Fragment>\n        <h1 className=\"large text-primary\">Posts</h1>\n        <p className=\"lead\">\n          <i className=\"fas fa-user\"/>\n          Welcome to the community\n        </p>\n        <PostForm />\n        <div className=\"posts\">\n          {posts.map(post => (\n            <PostItem key={post._id} post={post}/>\n          ))}\n        </div>\n\n      </Fragment>)\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {getPosts})(Posts);\n"]},"metadata":{},"sourceType":"module"}