{"ast":null,"code":"var _jsxFileName = \"/Users/johannboumans/Data/DevConnector/client/src/components/profiles/Profiles.jsx\";\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from 'prop-types';\nimport { getProfiles } from \"../../actions/profile\";\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Developers\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Browse and connect with developers\")), React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, profiles.length > 0 ? profiles.map(profile => React.createElement(ProfileItem, {\n    key: profile._id,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"No profiles found...\"))));\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["/Users/johannboumans/Data/DevConnector/client/src/components/profiles/Profiles.jsx"],"names":["React","Fragment","useEffect","connect","Spinner","PropTypes","getProfiles","Profiles","profile","profiles","loading","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAACD,EAAAA,WAAD;AAAcE,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAAvB,CAAD,KAAmD;AAElER,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,OAAO,GACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,CAFF,EAKE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACE,MAAT,GAAkB,CAAlB,GACEF,QAAQ,CAACG,GAAT,CAAaJ,OAAO,IACnB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACK,GAA1B;AAA+B,IAAA,OAAO,EAAEL,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADF,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANJ,CALF,CAJJ,CADF;AAqBD,CA3BD;;AA6BAD,QAAQ,CAACO,SAAT,GAAqB;AACnBR,EAAAA,WAAW,EAAED,SAAS,CAACU,IAAV,CAAeC,UADT;AAEnBR,EAAAA,OAAO,EAAEH,SAAS,CAACY,MAAV,CAAiBD;AAFP,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,OAAO,EAAEW,KAAK,CAACX;AADiB,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACe,eAAD,EAAkB;AAACZ,EAAAA;AAAD,CAAlB,CAAP,CAAwCC,QAAxC,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from 'prop-types';\nimport {getProfiles} from \"../../actions/profile\";\n\n\n\nconst Profiles = ({getProfiles, profile: { profiles, loading }}) => {\n\n  useEffect(() => {\n    getProfiles()\n  }, []);\n\n  return (\n    <Fragment>\n      {loading ?\n        <Spinner/>\n        :\n        <Fragment>\n          <h1 className=\"large text-primary\">Developers</h1>\n          <p className=\"lead\">\n            <i className=\"fab fa-connectdevelop\">Browse and connect with developers</i>\n          </p>\n          <div className=\"profiles\">\n            {profiles.length > 0 ?\n              (profiles.map(profile => (\n                <ProfileItem key={profile._id} profile={profile} />\n              )))\n              :\n              <h4>No profiles found...</h4>}\n          </div>\n        </Fragment>}\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\n\nexport default connect(mapStateToProps, {getProfiles})(Profiles);\n"]},"metadata":{},"sourceType":"module"}