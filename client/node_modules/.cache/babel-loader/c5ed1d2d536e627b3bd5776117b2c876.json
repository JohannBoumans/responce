{"ast":null,"code":"var _jsxFileName = \"/Users/johannboumans/Data/Responce/client/src/components/post/CommentItem.jsx\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { deleteComment } from \"../../actions/post\";\n\nconst CommentItem = ({\n  postId,\n  comment: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    date\n  },\n  auth,\n  deleteComment\n}) => React.createElement(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/profile/\".concat(user),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  className: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}), React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, name))), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  className: \"my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, text), React.createElement(\"p\", {\n  className: \"post-date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \"Posted on: \", React.createElement(Moment, {\n  format: \"DD/MM/YYYY\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, date)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n  onClick: () => deleteComment(postId, _id),\n  type: \"button\",\n  className: \"btn btn-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-times\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}))));\n\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  deleteComment\n})(CommentItem);","map":{"version":3,"sources":["/Users/johannboumans/Data/Responce/client/src/components/post/CommentItem.jsx"],"names":["React","Fragment","PropTypes","connect","Link","Moment","deleteComment","CommentItem","postId","comment","_id","text","name","avatar","user","date","auth","loading","propTypes","number","isRequired","object","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,aAAR,QAA4B,oBAA5B;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,OAAO,EAAE;AAACC,IAAAA,GAAD;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,MAAlB;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA;AAAhC,GAAlB;AAAyDC,EAAAA,IAAzD;AAA+DV,EAAAA;AAA/D,CAAD,KAEhB;AAAK,EAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,EAAE,qBAAcQ,IAAd,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AACE,EAAA,SAAS,EAAC,WADZ;AAEE,EAAA,GAAG,EAAED,MAFP;AAGE,EAAA,GAAG,EAAC,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKD,IAAL,CANF,CADF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,IADH,CADF,EAIE;AAAG,EAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACa,oBAAC,MAAD;AAAQ,EAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA6BI,IAA7B,CADb,CAJF,EAOG,CAACC,IAAI,CAACC,OAAN,IAAiBH,IAAI,KAAKE,IAAI,CAACF,IAAL,CAAUJ,GAApC,IACC;AAAQ,EAAA,OAAO,EAAE,MAAMJ,aAAa,CAACE,MAAD,EAASE,GAAT,CAApC;AAAmD,EAAA,IAAI,EAAC,QAAxD;AAAiE,EAAA,SAAS,EAAC,gBAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CARJ,CAXF,CAFJ;;AA8BAH,WAAW,CAACW,SAAZ,GAAwB;AACtBV,EAAAA,MAAM,EAAEN,SAAS,CAACiB,MAAV,CAAiBC,UADH;AAEtBX,EAAAA,OAAO,EAAEP,SAAS,CAACmB,MAAV,CAAiBD,UAFJ;AAGtBJ,EAAAA,IAAI,EAAEd,SAAS,CAACmB,MAAV,CAAiBD,UAHD;AAItBd,EAAAA,aAAa,EAAEJ,SAAS,CAACoB,IAAV,CAAeF;AAJR,CAAxB;;AAOA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AADoB,CAAL,CAA7B;;AAIA,eAAeb,OAAO,CAACoB,eAAD,EAAkB;AAACjB,EAAAA;AAAD,CAAlB,CAAP,CAA0CC,WAA1C,CAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport {deleteComment} from \"../../actions/post\";\n\n\nconst CommentItem = ({postId, comment: {_id, text, name, avatar, user, date}, auth, deleteComment}) => (\n\n    <div className=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img\n            className=\"round-img\"\n            src={avatar}\n            alt=\"\"\n          />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className=\"my-1\">\n          {text}\n        </p>\n        <p className=\"post-date\">\n          Posted on: <Moment format='DD/MM/YYYY'>{date}</Moment>\n        </p>\n        {!auth.loading && user === auth.user._id && (\n          <button onClick={() => deleteComment(postId, _id)} type='button' className='btn btn-danger'>\n            <i className=\"fas fa-times\"/>\n          </button>\n        )}\n      </div>\n    </div>\n);\n\n\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {deleteComment})(CommentItem);\n"]},"metadata":{},"sourceType":"module"}